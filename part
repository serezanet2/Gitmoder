local player = game:GetService("Players").LocalPlayer
local mouse = player:GetMouse()
local holdDistance = 5  -- Уменьшил дистанцию для более удобного использования
local heldObject = nil
local connection = nil
local lastHighlight = nil

-- Оптимизированная функция подсветки
local function updateHighlight(part)
    -- Удаляем предыдущую подсветку
    if lastHighlight then
        if lastHighlight:FindFirstChild("PickUpHighlight") then
            lastHighlight.PickUpHighlight:Destroy()
        end
        lastHighlight = nil
    end
    
    -- Создаем новую подсветку если часть существует
    if part and part:IsA("BasePart") then
        lastHighlight = part
        local highlight = Instance.new("SelectionBox")
        highlight.Name = "PickUpHighlight"
        highlight.Adornee = part
        highlight.Color3 = Color3.new(1, 0.5, 0)  -- Оранжевый цвет
        highlight.LineThickness = 0.05
        highlight.Parent = part
    end
end

-- Функция захвата объекта
local function pickupObject()
    if heldObject then return end
    
    if lastHighlight and lastHighlight:IsA("BasePart") then
        heldObject = lastHighlight
        
        -- Сохраняем оригинальные свойства
        heldObject.Anchored = true
        
        -- Убираем подсветку при захвате
        updateHighlight(nil)
        
        -- Подключаем обработчик перемещения
        connection = game:GetService("RunService").Heartbeat:Connect(function()
            if heldObject and heldObject.Parent then
                local camera = workspace.CurrentCamera
                local newPosition = camera.CFrame.Position + (camera.CFrame.LookVector * holdDistance)
                heldObject.Position = newPosition
                heldObject.Orientation = camera.CFrame.Orientation
            else
                -- Если объект удалили, очищаем
                connection:Disconnect()
                heldObject = nil
            end
        end)
    end
end

-- Функция отпускания объекта
local function releaseObject()
    if heldObject then
        if connection then
            connection:Disconnect()
            connection = nil
        end
        
        heldObject.Anchored = false
        heldObject = nil
    end
end

-- Обработка движения мыши с оптимизацией
local debounce = false
mouse.Move:Connect(function()
    if debounce then return end
    debounce = true
    
    local target = mouse.Target
    updateHighlight(target)
    
    debounce = false
end)

-- Обработка кликов
mouse.Button1Down:Connect(function()
    if not heldObject then
        pickupObject()
    else
        releaseObject()
    end
end)

-- Очистка при выходе из игры
game:GetService("Players").PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == player then
        releaseObject()
        updateHighlight(nil)
    end
end)
